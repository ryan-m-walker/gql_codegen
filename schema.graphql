enum Role {
    ADMIN
    USER
}

enum Species {
    DOG
    CAT
}

interface Animal {
    id: ID!
    species: Species!
    name: String!
}

type Dog implements Animal {
    id: ID!
    species: Species!
    name: String!
    breed: String!
}

type Cat implements Animal {
    id: ID!
    species: Species!
    name: String!
    color: String!
}

union Pet = Cat | Dog

""" They is just peoples """
type Person {
    id: ID!
    name: String!
    role: Role
    friends: [Person!]!
    """ They is just pets """
    pets: [Animal]
    emails: [String!]
}

type Query {
    person(id: ID!): Person
    persons: [Person!]!
    hello: String!
    hellos: [String!]!
    pets: [Animal!]!
}

extend union Pet = Person

extend type Person {
    age: Int
} 

input TestInput {
    id: ID!
    name: String!
    role: Role
}

scalar Date
